name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  TASTY_TIMEOUT: 10s

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: '8.8.4'
      #   cabal-version: '3.2'
    - name: Install GL for 08-game
      run: sudo apt-get install libgl-dev libglu1-mesa-dev

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-stack
      with:
        path: ~/.stack
        key:
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/stack.yaml') }}-${{ hashFiles('**/*.cabal') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/stack.yaml') }}
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - {name: Compile task 01-intro, run: .test/ghc 01-intro/*.hs}
    - {name: Compile task 02-types, run: .test/ghc 02-types/*.hs}
    - {name: Run tests in task 03-testing, run: .test/stack-test 03-testing}
    - {name: Run tests in task 04-testing, run: .test/stack-test 04-testing}
    - {name: Run tests in task 05-web, run: .test/stack-test 05-web}
    - {name: Run tests in task 06-parsing, run: .test/stack-test 06-parsing}
    - {name: Run tests in task 07-json, run: .test/stack-test 07-json}
    - {name: Run tests in task 08-game, run: .test/stack-test 08-game}
    - {name: Run tests in task 09-compiler, run: .test/stack-test 09-compiler}

    # - name: Install stack
    #   run:
    #     - mkdir -p ~/.local/bin
    #     - export PATH=$HOME/.local/bin:$PATH
    #     - |
    #       if which stack; then
    #         stack --version
    #       else
    #         curl -sSL https://get.haskellstack.org/ | sh
    #     - export STACK="stack --no-terminal --install-ghc"

    # - name: Install dependencies
    #   run: stack build --test --only-dependencies
    # - name: Build
    #   run: stack build
    # - name: Run tests
    #   run: stack test
